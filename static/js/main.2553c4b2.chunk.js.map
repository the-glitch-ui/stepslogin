{"version":3,"sources":["components/logincard/LoginCard.module.css","components/logincard/CardFeedback.module.css","components/logincard/LoginInput.module.css","components/logincard/SetIcon.module.css","images/icon_login_arrow.svg","images/icon_login_user.svg","images/icon_login_email.svg","images/icon_login_key.svg","components/LoginScreen.module.css","components/logincard/CardFeedback.jsx","components/logincard/SetIcon.jsx","components/logincard/LoginInput.jsx","components/logincard/LoginCard.jsx","components/LoginScreen.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","CardFeedback","hasErrors","label","content","classes","CardFeedbackStyles","feedback","feedback_error","feedback_instructions","className","SetIcon","icon","IconStyles","src","IconUser","alt","IconEmail","IconKey","LoginInput","name","kind","onChange","onClick","text","value","InputStyles","field","type","placeholder","required","arrow","IconArrow","success","LoginCard","data","CardStyles","card","field_error","field_normal","FieldClasses","LoginScreen","state","currentStep","info","inputData","username","email","password","errors","getCurrentStep","getStepInfo","getStepName","getValue","handleChange","input","currentTarget","console","log","setState","handleSubmit","e","preventDefault","getCurrentInfo","validate","length","regExp","test","RegExp","this","onSubmit","href","LoginScreenStyles","footer","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2553c4b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"LoginCard_card__34WLZ\",\"field\":\"LoginCard_field__1oKtG\",\"field_normal\":\"LoginCard_field_normal__2yQQ4\",\"field_error\":\"LoginCard_field_error__3WarZ\",\"bounce\":\"LoginCard_bounce__2L2et\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"CardFeedback_feedback__-Kc3-\",\"feedback_error\":\"CardFeedback_feedback_error__1Ci31\",\"feedback_instructions\":\"CardFeedback_feedback_instructions__N25Gt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"LoginInput_arrow__3Nj3g\",\"field\":\"LoginInput_field__2ygna\",\"icon\":\"LoginInput_icon__1PxmB\",\"success\":\"LoginInput_success__3WI45\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"SetIcon_icon__1sYeb\"};","module.exports = __webpack_public_path__ + \"static/media/icon_login_arrow.3e9c517e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_login_user.a617dfb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_login_email.82189696.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_login_key.d04dfc48.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"LoginScreen_footer__3zkd8\"};","import React from \"react\";\nimport CardFeedbackStyles from \"./CardFeedback.module.css\";\n\nconst CardFeedback = ({ hasErrors, label }) => {\n  let content = \"\";\n\n  if (hasErrors) {\n    content = hasErrors;\n  } else {\n    content = label;\n  }\n\n  let classes = `${CardFeedbackStyles.feedback}`;\n\n  if (hasErrors) {\n    classes += ` ${CardFeedbackStyles.feedback_error}`;\n  } else {\n    classes += ` ${CardFeedbackStyles.feedback_instructions}`;\n  }\n  return <p className={classes}>{content}</p>;\n};\n\nexport default CardFeedback;\n","import React from \"react\";\nimport IconStyles from \"./SetIcon.module.css\";\nimport IconUser from \"../../images/icon_login_user.svg\";\nimport IconEmail from \"../../images/icon_login_email.svg\";\nimport IconKey from \"../../images/icon_login_key.svg\";\n\nconst SetIcon = ({ icon }) => {\n  switch (icon) {\n    case \"IconUser\":\n      return <img className={IconStyles.icon} src={IconUser} alt=\"Username\" />;\n    case \"IconEmail\":\n      return <img className={IconStyles.icon} src={IconEmail} alt=\"Email\" />;\n    case \"IconKey\":\n      return <img className={IconStyles.icon} src={IconKey} alt=\"Password\" />;\n    default:\n      break;\n  }\n};\n\nexport default SetIcon;\n","import React from \"react\";\nimport IconArrow from \"../../images/icon_login_arrow.svg\";\nimport InputStyles from \"./LoginInput.module.css\";\nimport SetIcon from \"./SetIcon\";\n\nconst LoginInput = ({ name, icon, kind, onChange, onClick, text, value }) => {\n  return kind === \"input\" ? (\n    <>\n      <SetIcon icon={icon} />\n      <input\n        className={InputStyles.field}\n        name={name}\n        type=\"text\"\n        placeholder={text}\n        onChange={onChange}\n        required\n        value={value}\n      />\n      <input\n        type=\"image\"\n        className={InputStyles.arrow}\n        src={IconArrow}\n        onClick={onClick}\n        alt=\"Next\"\n      />\n    </>\n  ) : (\n    <>\n      <p className={InputStyles.success}>{text}</p>\n    </>\n  );\n};\n\nexport default LoginInput;\n","import React from \"react\";\nimport CardFeedback from \"./CardFeedback\";\nimport LoginInput from \"./LoginInput\";\nimport CardStyles from \"./LoginCard.module.css\";\n\nconst LoginCard = ({ data, hasErrors, onChange, onClick, value }) => {\n  const FieldClasses = () => {\n    let classes = `${CardStyles.field}`;\n    if (hasErrors) {\n      classes += ` ${CardStyles.field_error}`;\n    } else {\n      classes += ` ${CardStyles.field_normal}`;\n    }\n    return classes;\n  };\n\n  return (\n    <div className={CardStyles.card}>\n      <CardFeedback hasErrors={hasErrors} label={data.label} />\n\n      <div className={FieldClasses()}>\n        <LoginInput\n          icon={data.icon}\n          kind={data.kind}\n          name={data.name}\n          onChange={onChange}\n          onClick={onClick}\n          text={data.text}\n          value={value}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default LoginCard;\n","import React, { Component } from \"react\";\nimport LoginCard from \"./logincard/LoginCard.jsx\";\nimport LoginScreenStyles from \"./LoginScreen.module.css\";\n\nclass LoginScreen extends Component {\n  state = {\n    currentStep: 0,\n    info: [\n      {\n        name: \"username\",\n        text: \"Username\",\n        kind: \"input\",\n        label: \"Please enter your username\",\n        icon: \"IconUser\",\n      },\n      {\n        name: \"email\",\n        text: \"Email\",\n        kind: \"input\",\n        label: \"Please enter your email\",\n        icon: \"IconEmail\",\n      },\n      {\n        name: \"password\",\n        text: \"Password\",\n        kind: \"input\",\n        label: \"Please enter a password\",\n        icon: \"IconKey\",\n      },\n      {\n        name: \"thankyou\",\n        text: \"Thank you for registering!\",\n        kind: \"message\",\n        label: \"Successfully registered\",\n        icon: \"IconSuccess\",\n      },\n    ],\n    inputData: {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    },\n    errors: \"\",\n  };\n\n  getCurrentStep = () => {\n    const { currentStep, errors, info, inputData } = this.state;\n    const getStepInfo = info[currentStep];\n    const getStepName = getStepInfo.name;\n    const getValue = inputData[getStepName];\n\n    return { errors, getStepInfo, getStepName, getValue };\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const inputData = { ...this.state.inputData };\n    inputData[input.name] = input.value;\n    console.log(input.name);\n    this.setState({ inputData });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const getCurrentInfo = this.getCurrentStep();\n\n    const errors = this.validate(\n      getCurrentInfo.getStepName,\n      getCurrentInfo.getValue\n    );\n\n    errors === \"\"\n      ? this.setState({ errors, currentStep: this.state.currentStep + 1 })\n      : this.setState({ errors });\n  };\n\n  validate = (name, value) => {\n    console.log(`validate ${name} : ${value}`);\n    let errors = \"\";\n    switch (name) {\n      case \"username\":\n        errors = value.length < 4 ? \"At least 4 characters are required\" : \"\";\n        console.log(`username errors ${errors}`);\n        break;\n      case \"email\":\n        errors = this.regExp.test(value) ? \"\" : \"Email address is invalid\";\n        break;\n      case \"password\":\n        errors = value.length < 6 ? \"At least 6 characters are required\" : \"\";\n        break;\n      default:\n        errors = \"\";\n    }\n    return errors;\n  };\n\n  regExp = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n\n  render() {\n    const getCurrentInfo = this.getCurrentStep();\n\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <LoginCard\n            data={getCurrentInfo.getStepInfo}\n            hasErrors={getCurrentInfo.errors}\n            onChange={this.handleChange}\n            onClick={this.handleSubmit}\n            value={getCurrentInfo.getValue}\n          />\n        </form>\n        <a href=\"https://github.com/the-glitch-ui\">\n          <p className={LoginScreenStyles.footer}>©2020 The Glitch UI</p>\n        </a>\n      </>\n    );\n  }\n}\n\nexport default LoginScreen;\n","import React from \"react\";\nimport LoginScreen from \"./components/LoginScreen\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LoginScreen />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}